{## Content + Sidebar (Aside)   [Site Template]
{---------------------------------------------------------------------------------------}
    Inherits everything from `_site/template.fullpage` with the following changes:

  - Overloads {% main__content %} to create a two-column layout.
  - Overloads {% page__bottom %} to use a slim footer.
  - Pulls content from the `entry.bodyBuilder` and `entry.sidebarBuilder` matrix fields.
--------------------------------------------------------------------------------------##}
{% extends "_site/template.fullpage" %}
{% import "_core" as assemble %}


{## Template Variables
{-------------------------------------------------------------------------------------##}
{%- set settings = settings ?? null %}
{%- set settings = settings ?? null is iterable ? settings : {} -%}


{## Two Column Layout
{-------------------------------------------------------------------------------------##}
{% block main__content -%}
    {{- assemble.layout( 'sidebar__right', {
        main : block('content'),
        aside: block('aside')
    }, settings ) -}}
{%- endblock %}


{## Alternate Footer Layout
{-------------------------------------------------------------------------------------##}
{% block page__bottom block( 'footer__slim', '_site/footer' ) %}


{## Eager Load Matrix Builders
{-------------------------------------------------------------------------------------##}
{%- set mainblocks = entry.bodyBuilder ? entry.bodyBuilder
    .with([
        "text:bits",
        "image:collections",     "image:images",
        "media:collections",     "media:media",
        "carddeck:collections",  "carddeck:entries", "carddeck:items",
        "component:collections", "component:form",
        "fragment:fragments"
    ]).all() -%}

{%- set sideblocks = entry.sidebarBuilder ? entry.sidebarBuilder
    .with([
        "text:bits",
        "image:collections",     "image:images",
        "media:collections",     "media:media",
        "carddeck:collections",  "carddeck:entries", "carddeck:items",
        "component:collections", "component:form",
        "fragment:fragments"
    ]).all() -%}


{## Body Content Builder
{---------------------------------------------------------------------------------------}
    If the first Body blocks' *theme* matches the Header Builder *theme*, we tell the
    Block Builder to skip the first spacer (`spacerfirst`).
--------------------------------------------------------------------------------------##}
{% block content -%}
    {% set firstblock = mainblocks | first %}
    {% set headerattr = block( 'page__top' ) | retconOnly( 'header *[data-theme]' ) | parseAttr %}
    {% set themematch = headerattr.data.theme ??? "base" == firstblock.theme|t ??? "base" %}

    {{- assemble.builder( 'maincolumn', mainblocks ?? null, {
        container  : "relative",
        spacerfirst: themematch ? "none" : "normal",
        spacerabove: "normal",
        spacerbelow: "normal"
    }) -}}
{%- endblock %}


{## Sidebar Builder
{-------------------------------------------------------------------------------------##}
{% block aside -%}
    {{- assemble.builder( 'sidebar', sideblocks ?? null, {
        container  : "relative",
        spacerabove: "small",
        spacerbelow: "small"
    }) -}}
{%- endblock %}
