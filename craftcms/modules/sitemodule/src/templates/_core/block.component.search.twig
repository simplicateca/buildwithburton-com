{## [Core Block] Search Component
{---------------------------------------------------------------------------------------}
    Search results / index page for Collection content. Htmx enabled.
  > http://localhost:8000/sitehub/blocks/component/search
{-------------------------------------------------------------------------------------##}
{% extends [ "_site/block.component", "_core/block.component" ] %}


{## Collect Search Parameters & Pagination Results
{---------------------------------------------------------------------------------------}
    CollectionBase() is a PHP Twig macro that returns a query object based on the
    search params passed into it. It is editable here:

    -> `craftcms/modules/sitemodule/src/twigextensions/CollectionBaseTwig.php`

    Like CollectionResults(), except where it returns an array of indivudal results,
    CollectionBase() returns the Craft ElementQuery object.
{-------------------------------------------------------------------------------------##}
{%- block block__microlayout %}

    {%- set settings = settings ?? null is iterable ? settings : {} -%}

    {%- set settings = {
        iterator   : 'grid2',
        microlayout: 'default',
        interface  : 'keyword',
        pagination : 'none',
        loop__index: 1,
    } | merge(settings) -%}

    {## Search object for passing around query/result related data ##}
    {% set i = settings.loop__index %}
    {%- set search = {
        uuid       : "search__#{i}",
        page       : craft.app.request.getParam('page')  ?? craft.app.request.pageNum ?? 1,
        query      : craft.app.request.getParam("q#{i}") ?? null,
        filter     : craft.app.request.getParam("f#{i}") ?? null,
        static     : 'entries',
        limit      : settings.limit ??? 100,
        baseurl    : settings.entryurl ??? siteUrl( craft.app.request.pathInfo ),
        results    : [],
        pageinfo   : null,
        collections: collect( block.collections ??? collections ??? [] ),
    } -%}

    {## shortcut for search params in other templates that use htmx ##}
    {%- set hxvals = ( search.query ) ? { ("q#{i}") : search.query } : {} -%}
    {%- set hxvals = ( search.filter and search.filter != collect(search.collections).first().slug )
        ? hxvals|merge({ ("f#{i}") : search.filter })
        : hxvals -%}

    {## require some kind of user input before doing the search or nah? ##}
    {%- set search = search | merge({
        execute: ( true or search.query or search.filter or search.page > 1 ),
        baseurl: search.baseurl | replace({ ('/' ~ craft.app.config.general.pageTrigger ~ search.page) : '' }),
        hxvals : hxvals
    }) -%}

    {## collect the stuff we're searching ##}
    {% if settings.autosearch ??? false or ( search.query or search.filter or search.page > 1 ) %}
        {% set results = CollectionBase( search.collections, search ) %}
        {% if results %}
            {%- paginate results as pageinfo, results -%}
            {%- set search = search | merge({
                pageinfo: pageinfo,
                results: results
            }) -%}
        {% endif %}
    {%- endif -%}


    {## https://htmx.org/headers/hx-push-url/ ##}
    {%- set pagedurl = (search.page > 1)
        ? search.baseurl ~ '/' ~ craft.app.config.general.pageTrigger ~ search.page
        : search.baseurl -%}
    {% header ( search.hxvals )
        ? "HX-Push-Url: " ~ siteUrl( pagedurl, search.hxvals )
        : "HX-Push-Url: " ~ siteUrl( pagedurl )  %}


    {%- import "_core" as assemble -%}
    {{- assemble.microlayout( settings.microlayout, {
        zone1 : block('search__zone1'),
        zone2 : block('search__zone2'),
        header: block('block__header'),
        footer: block('block__footer')
    }, settings ) -}}
{%- endblock -%}



{%- block search__zone1 -%}
    {%- import "_core" as assemble -%}
    {%- set text = block('block__zone1') -%}
    <div class="sticky top-20">
        {{ raw( text ) }}
        {% if settings.interface != 'none' %}
            {{- assemble.separator( 'small' ) -}}
            <form method="get" action="{{ search.baseurl }}" class="max-w-5xl w-full flex flex-col gap-y-3"
                hx-select="#{{ search.uuid }}"
                hx-target="#{{ search.uuid }}"
                hx-swap="outerHTML ignoreTitle:true show:top"
            >
                {% import "_core" as assemble %}
                {% if settings.interface in ['keyword', 'both'] %}
                    {{ assemble.searchpart( 'keywordinput', search, settings ) }}
                {% endif %}
                {% if settings.interface in ['topics', 'both'] %}
                    {{ assemble.searchpart( 'topicfilter', search, settings ) }}
                {% endif %}
            </form>
        {% endif %}
    </div>
{% endblock %}


{%- block search__zone2 -%}
    {%- import "_core" as assemble -%}
    <div class="w-full scroll-mt-20" id="{{ search.uuid }}">
        {%- if search.results -%}
            {{- assemble.deck( settings.iterator, search.results, settings ) -}}
            {%- if search.pageinfo.totalPages > 1 and settings.pagination != 'none' -%}
                <div class="pt-10">{{ assemble.searchpart(  'pagination', search, settings ) }}</div>
            {%- endif -%}
        {%- endif -%}
    </div>
{%- endblock -%}